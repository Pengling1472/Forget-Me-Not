[gd_resource type="VisualShader" load_steps=4 format=3 uid="uid://dv07v6shmvyyt"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_blemj"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_5aatr"]
source = 1
texture = SubResource("NoiseTexture2D_blemj")

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_ct2ub"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 50)]
op_type = 2

[resource]
code = "shader_type canvas_item;
uniform sampler2D screen_tex_frg_2 : hint_screen_texture;



void fragment() {
	vec4 n_out2p0;
// Texture2D:2
	n_out2p0 = texture(screen_tex_frg_2, SCREEN_UV);


// VectorOp:4
	vec4 n_in4p1 = vec4(0.00000, 0.00000, 0.00000, 50.00000);
	vec4 n_out4p0 = n_out2p0 + n_in4p1;


// Output:0
	COLOR.rgb = vec3(n_out4p0.xyz);


}
"
graph_offset = Vector2(-450.755, 91.7188)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(200, 220)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_5aatr")
nodes/fragment/2/position = Vector2(-500, 220)
nodes/fragment/4/node = SubResource("VisualShaderNodeVectorOp_ct2ub")
nodes/fragment/4/position = Vector2(-100, 260)
nodes/fragment/connections = PackedInt32Array(2, 0, 4, 0, 4, 0, 0, 0)
